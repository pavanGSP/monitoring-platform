
name: ci-cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository }}-backend
  IMAGE_FRONTEND: ghcr.io/${{ github.repository }}-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Configure kubeconfig from secret
        run: |
          echo "${KUBECONFIG_BASE64}" | base64 -d > $HOME/.kube/config
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}

      - name: Update image tags
        run: |
          sed -i "s#ghcr.io/OWNER/REPO-backend:latest#${IMAGE_BACKEND}:${GITHUB_SHA}#g" k8s/10-backend-deployment.yaml
          sed -i "s#ghcr.io/OWNER/REPO-frontend:latest#${IMAGE_FRONTEND}:${GITHUB_SHA}#g" k8s/20-frontend-deployment.yaml

      - name: Apply manifests
        run: |
          kubectl apply -f k8s/00-namespace.yaml
          kubectl -n monitor apply -f k8s/10-backend-deployment.yaml
          kubectl -n monitor apply -f k8s/11-backend-service.yaml
          kubectl -n monitor apply -f k8s/20-frontend-deployment.yaml
          kubectl -n monitor apply -f k8s/21-frontend-service.yaml

      - name: Wait for rollout
        run: |
          kubectl -n monitor rollout status deploy/backend --timeout=120s
          kubectl -n monitor rollout status deploy/frontend --timeout=120s
