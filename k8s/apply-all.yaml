
apiVersion: v1
kind: List
items:
- 
apiVersion: v1
kind: Namespace
metadata:
  name: monitor
  labels:
    app.kubernetes.io/part-of: monitoring-platform

- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: monitor
  labels:
    app: backend
    app.kubernetes.io/part-of: monitoring-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/OWNER/REPO-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"

- 
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: monitor
  labels:
    app: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - name: http
      port: 8000
      targetPort: 8000

- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: monitor
  labels:
    app: frontend
    app.kubernetes.io/part-of: monitoring-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/OWNER/REPO-frontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"

- 
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: monitor
  labels:
    app: frontend
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30081

